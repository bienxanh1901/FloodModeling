      SUBROUTINE CALCULATING_RUNOFF
      USE PARAM
      USE CONSTANTS
      USE TIME
      IMPLICIT NONE
      INTERFACE
        SUBROUTINE TRANSFORM_CALC(SBS, ITER)
        USE PARAM
        USE CONSTANTS
        USE TIME
        IMPLICIT NONE
        TYPE(SUBBASIN_TYPE), POINTER :: SBS
        INTEGER, INTENT(IN) :: ITER
        END SUBROUTINE TRANSFORM_CALC

        SUBROUTINE LOSS_CALC(SBS, ITER)
        USE PARAM
        USE CONSTANTS
        USE TIME
        IMPLICIT NONE
        TYPE(SUBBASIN_TYPE), POINTER :: SBS
        INTEGER, INTENT(IN) :: ITER
        END SUBROUTINE LOSS_CALC
      END INTERFACE

      TYPE(BASIN_TYPE), POINTER :: BS
      TYPE(SUBBASIN_TYPE), POINTER :: SBS
      INTEGER :: I, J, N

      CALL WRITE_LOG('CALCULATING RUNOFF!!!')

      DO I = 1, NBASIN

        BS => BASIN(I)

        DO J = 1,BS%NSUBBASIN

            SBS => BS%SUBBASIN(J)

            DO N = 1, NTIME - 1

                IF(SBS%LOSSRATE.NE.0) THEN

                    CALL LOSS_CALC(SBS, N)

                ELSE

                    IF(SBS%NPRECIP_GATE.GT.0) THEN

                        SBS%EXCESS(N) = SBS%AVERAGED_PRECIP(N)

                    ENDIF

                ENDIF

                IF(SBS%BASE_FLOW_TYPE.NE.0) SBS%BASE_FLOW(N) = SBS%GET_BASE_FLOW(TIME_ARR(N))

                IF(SBS%TRANSFORM.NE.0)CALL TRANSFORM_CALC(SBS, N)

                SBS%TOTAL_FLOW(N) = SBS%DIRECT_FLOW(N) + SBS%BASE_FLOW(N)

            ENDDO

        ENDDO

      ENDDO
      RETURN
      END SUBROUTINE CALCULATING_RUNOFF
